// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../src/app/app2/admin/ai-agents/page.tsx
{
  const handler = {} as typeof import("../../src/app/app2/admin/ai-agents/page.js")
  handler satisfies AppPageConfig<"/app2/admin/ai-agents">
}

// Validate ../../src/app/app2/admin/ai-workloads/page.tsx
{
  const handler = {} as typeof import("../../src/app/app2/admin/ai-workloads/page.js")
  handler satisfies AppPageConfig<"/app2/admin/ai-workloads">
}

// Validate ../../src/app/app2/admin/database-migration/page.tsx
{
  const handler = {} as typeof import("../../src/app/app2/admin/database-migration/page.js")
  handler satisfies AppPageConfig<"/app2/admin/database-migration">
}

// Validate ../../src/app/app2/admin/email-system/page.tsx
{
  const handler = {} as typeof import("../../src/app/app2/admin/email-system/page.js")
  handler satisfies AppPageConfig<"/app2/admin/email-system">
}

// Validate ../../src/app/app2/admin/etl-management/page.tsx
{
  const handler = {} as typeof import("../../src/app/app2/admin/etl-management/page.js")
  handler satisfies AppPageConfig<"/app2/admin/etl-management">
}

// Validate ../../src/app/app2/admin/feature-flags/page.tsx
{
  const handler = {} as typeof import("../../src/app/app2/admin/feature-flags/page.js")
  handler satisfies AppPageConfig<"/app2/admin/feature-flags">
}

// Validate ../../src/app/app2/admin/final-data-migration/page.tsx
{
  const handler = {} as typeof import("../../src/app/app2/admin/final-data-migration/page.js")
  handler satisfies AppPageConfig<"/app2/admin/final-data-migration">
}

// Validate ../../src/app/app2/admin/page.tsx
{
  const handler = {} as typeof import("../../src/app/app2/admin/page.js")
  handler satisfies AppPageConfig<"/app2/admin">
}

// Validate ../../src/app/app2/dashboard/page.tsx
{
  const handler = {} as typeof import("../../src/app/app2/dashboard/page.js")
  handler satisfies AppPageConfig<"/app2/dashboard">
}

// Validate ../../src/app/app2/health/page.tsx
{
  const handler = {} as typeof import("../../src/app/app2/health/page.js")
  handler satisfies AppPageConfig<"/app2/health">
}

// Validate ../../src/app/app2/jobs/page.tsx
{
  const handler = {} as typeof import("../../src/app/app2/jobs/page.js")
  handler satisfies AppPageConfig<"/app2/jobs">
}

// Validate ../../src/app/app2/page.tsx
{
  const handler = {} as typeof import("../../src/app/app2/page.js")
  handler satisfies AppPageConfig<"/app2">
}

// Validate ../../src/app/app2/performance/page.tsx
{
  const handler = {} as typeof import("../../src/app/app2/performance/page.js")
  handler satisfies AppPageConfig<"/app2/performance">
}

// Validate ../../src/app/app2/signin/page.tsx
{
  const handler = {} as typeof import("../../src/app/app2/signin/page.js")
  handler satisfies AppPageConfig<"/app2/signin">
}

// Validate ../../src/app/auth/callback/page.tsx
{
  const handler = {} as typeof import("../../src/app/auth/callback/page.js")
  handler satisfies AppPageConfig<"/auth/callback">
}

// Validate ../../src/app/migration/page.tsx
{
  const handler = {} as typeof import("../../src/app/migration/page.js")
  handler satisfies AppPageConfig<"/migration">
}

// Validate ../../src/app/page.tsx
{
  const handler = {} as typeof import("../../src/app/page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ../../src/app/storage-demo/page.tsx
{
  const handler = {} as typeof import("../../src/app/storage-demo/page.js")
  handler satisfies AppPageConfig<"/storage-demo">
}

// Validate ../../src/app/websocket-test/page.tsx
{
  const handler = {} as typeof import("../../src/app/websocket-test/page.js")
  handler satisfies AppPageConfig<"/websocket-test">
}

// Validate ../../src/app/api/admin/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin">
}

// Validate ../../src/app/api/ai-agents/route.ts
{
  const handler = {} as typeof import("../../src/app/api/ai-agents/route.js")
  handler satisfies RouteHandlerConfig<"/api/ai-agents">
}

// Validate ../../src/app/api/ai-agents/workflows/route.ts
{
  const handler = {} as typeof import("../../src/app/api/ai-agents/workflows/route.js")
  handler satisfies RouteHandlerConfig<"/api/ai-agents/workflows">
}

// Validate ../../src/app/api/ai-workloads/route.ts
{
  const handler = {} as typeof import("../../src/app/api/ai-workloads/route.js")
  handler satisfies RouteHandlerConfig<"/api/ai-workloads">
}

// Validate ../../src/app/api/canary/metrics/route.ts
{
  const handler = {} as typeof import("../../src/app/api/canary/metrics/route.js")
  handler satisfies RouteHandlerConfig<"/api/canary/metrics">
}

// Validate ../../src/app/api/canary/route.ts
{
  const handler = {} as typeof import("../../src/app/api/canary/route.js")
  handler satisfies RouteHandlerConfig<"/api/canary">
}

// Validate ../../src/app/api/email/test/route.ts
{
  const handler = {} as typeof import("../../src/app/api/email/test/route.js")
  handler satisfies RouteHandlerConfig<"/api/email/test">
}

// Validate ../../src/app/api/health/route.ts
{
  const handler = {} as typeof import("../../src/app/api/health/route.js")
  handler satisfies RouteHandlerConfig<"/api/health">
}

// Validate ../../src/app/api/ideas/[id]/route.ts
{
  const handler = {} as typeof import("../../src/app/api/ideas/[id]/route.js")
  handler satisfies RouteHandlerConfig<"/api/ideas/[id]">
}

// Validate ../../src/app/api/ideas/route.ts
{
  const handler = {} as typeof import("../../src/app/api/ideas/route.js")
  handler satisfies RouteHandlerConfig<"/api/ideas">
}

// Validate ../../src/app/api/migration/route.ts
{
  const handler = {} as typeof import("../../src/app/api/migration/route.js")
  handler satisfies RouteHandlerConfig<"/api/migration">
}

// Validate ../../src/app/api/migration/status/route.ts
{
  const handler = {} as typeof import("../../src/app/api/migration/status/route.js")
  handler satisfies RouteHandlerConfig<"/api/migration/status">
}

// Validate ../../src/app/api/parity-validation/route.ts
{
  const handler = {} as typeof import("../../src/app/api/parity-validation/route.js")
  handler satisfies RouteHandlerConfig<"/api/parity-validation">
}

// Validate ../../src/app/api/performance/route.ts
{
  const handler = {} as typeof import("../../src/app/api/performance/route.js")
  handler satisfies RouteHandlerConfig<"/api/performance">
}

// Validate ../../src/app/api/privacy/route.ts
{
  const handler = {} as typeof import("../../src/app/api/privacy/route.js")
  handler satisfies RouteHandlerConfig<"/api/privacy">
}

// Validate ../../src/app/api/projects/route.ts
{
  const handler = {} as typeof import("../../src/app/api/projects/route.js")
  handler satisfies RouteHandlerConfig<"/api/projects">
}

// Validate ../../src/app/api/security/admin-actions/route.ts
{
  const handler = {} as typeof import("../../src/app/api/security/admin-actions/route.js")
  handler satisfies RouteHandlerConfig<"/api/security/admin-actions">
}

// Validate ../../src/app/api/security/audit-logs/route.ts
{
  const handler = {} as typeof import("../../src/app/api/security/audit-logs/route.js")
  handler satisfies RouteHandlerConfig<"/api/security/audit-logs">
}

// Validate ../../src/app/api/security/compliance/route.ts
{
  const handler = {} as typeof import("../../src/app/api/security/compliance/route.js")
  handler satisfies RouteHandlerConfig<"/api/security/compliance">
}

// Validate ../../src/app/api/security/data-classification/route.ts
{
  const handler = {} as typeof import("../../src/app/api/security/data-classification/route.js")
  handler satisfies RouteHandlerConfig<"/api/security/data-classification">
}

// Validate ../../src/app/api/security/events/route.ts
{
  const handler = {} as typeof import("../../src/app/api/security/events/route.js")
  handler satisfies RouteHandlerConfig<"/api/security/events">
}

// Validate ../../src/app/api/security/route.ts
{
  const handler = {} as typeof import("../../src/app/api/security/route.js")
  handler satisfies RouteHandlerConfig<"/api/security">
}

// Validate ../../src/app/api/users/[id]/route.ts
{
  const handler = {} as typeof import("../../src/app/api/users/[id]/route.js")
  handler satisfies RouteHandlerConfig<"/api/users/[id]">
}

// Validate ../../src/app/api/users/route.ts
{
  const handler = {} as typeof import("../../src/app/api/users/route.js")
  handler satisfies RouteHandlerConfig<"/api/users">
}

// Validate ../../src/app/api/websocket/route.ts
{
  const handler = {} as typeof import("../../src/app/api/websocket/route.js")
  handler satisfies RouteHandlerConfig<"/api/websocket">
}

// Validate ../../src/app/api/websocket/status/route.ts
{
  const handler = {} as typeof import("../../src/app/api/websocket/status/route.js")
  handler satisfies RouteHandlerConfig<"/api/websocket/status">
}





// Validate ../../src/app/layout.tsx
{
  const handler = {} as typeof import("../../src/app/layout.js")
  handler satisfies LayoutConfig<"/">
}
